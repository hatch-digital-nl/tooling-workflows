name: Auto-Release packages on Version Change

on:
  workflow_call:
    inputs:
      default-branch:
        description: 'The default branch to check for pushes'
        required: true
        type: string
    secrets:
      token:
        description: 'The GITHUB_TOKEN from the calling repo'
        required: true

jobs:
  check-version-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get version from composer.json
        id: get_version
        run: |
          # Just read the version from the file at the current commit
          VERSION=$(jq -r .version composer.json)
          echo "Found version $VERSION in composer.json."
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        env:
          TAG: ${{ steps.get_version.outputs.version }}
        run: |
          # This command checks if the tag exists locally
          # We fetched all tags, so this is accurate.
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag $TAG does not exist."
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Tag and Release
        if: steps.check_tag.outputs.tag_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          TAG: ${{ steps.get_version.outputs.version }}
        run: |
          echo "Creating new release for $TAG..."
          gh release create "$TAG" \
            --title "Release $TAG" \
            --notes "Automatic release triggered by version $TAG in composer.json."
          echo "Release $TAG created successfully."

      - name: No Version Change
        if: steps.get_versions.outputs.version_changed == 'false'
        run: echo "No version change detected. No new release will be created."